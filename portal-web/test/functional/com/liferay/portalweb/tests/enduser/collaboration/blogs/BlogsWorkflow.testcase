@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();
		}
	}

	@description = "This is a test for LPS-136813. It checks that a Blog entry can be resubmitted after it is rejected."
	@priority = "4"
	test CanResubmitRejectedEntry {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Blogs Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Blogs Page",
			widgetName = "Blogs");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Guest");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "Notifications");

		WorkflowAsset.gotoViaNotification(
			assetType = "Blogs Entry",
			user = "Test Test");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Reject");

		Workflow.confirmWorkflowAction();

		Refresh();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Resubmit");

		Workflow.confirmWorkflowAction();

		UserBar.gotoDropdownItem(dropdownItem = "Notifications");

		WorkflowAsset.gotoViaNotification(
			assetType = "Blogs Entry",
			user = "Test Test");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

}