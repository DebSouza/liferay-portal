@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "24";
	property portal.release = "false";
	property portal.upstream = "true";
	property slave.label = "slave-1";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8785 | Test Summary: Add a keyword that already exists"
	@ignore = "true"
	@priority = "3"
	test AddKeywordAlreadyExists {

		// TODO LRAC-8785 AddKeywordAlreadyExists pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8786 | Test Summary: Add keyword when there are none"
	@priority = "3"
	test AddKeywordCurrentlyNone {
		task ("Go to AC Settings > definitions > Interests") {
			ACNavigation.goToSettings();

			ACSettings.goToDefinitions();

			ACDefinitions.goToDefinitionType(definitionType = "Interests");
		}

		task ("Check no result") {
			ACUtils.viewNoResultsMessage(noResultMessage = "You have not added keywords to the blocklist yet.");
		}

		task ("Add keywords and assert result") {
			ACSettings.addKeywords(keyword = "test");

			ACSettings.assertKeywords(keyword = "test");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8787 | Test Summary: Add multiple keywords"
	@ignore = "true"
	@priority = "3"
	test AddMultipleKeywords {

		// TODO LRAC-8787 AddMultipleKeywords pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8788 | Test Summary: Add multiple of the same keyword"
	@ignore = "true"
	@priority = "3"
	test AddMultipleSameKeyword {

		// TODO LRAC-8788 AddMultipleSameKeyword pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8789 | Test Summary: View only selected keywords"
	@ignore = "true"
	@priority = "3"
	test AssertSelectedKeywords {

		// TODO LRAC-8789 AssertSelectedKeywords pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8789 | Test Summary: Delete a keyword block"
	@priority = "3"
	test DeleteKeywordBlock {
		task ("Open AC") {
			ACUtils.launchAC();
		}

		task ("Go to settings, definitions and definitions type") {
			ACNavigation.goToSettings();

			ACSettings.goToDefinitions();

			ACDefinitions.goToDefinitionType(definitionType = "Interests");
		}

		task ("Add two new keywords") {
			var words = "ac keyword 1,ac keyword 2";

			for (var word : list "${words}") {
				ACSettings.addKeywords(keyword = "${word}");

				ACSettings.assertKeywords(keyword = "${word}");
			}
		}

		task ("Select all the keywords and delete them") {
			ACSettings.deleteAllKeywords();
		}

		task ("Assert that all keywords were deleted") {
			ACUtils.viewNoResultsMessage(noResultMessage = "You have not added keywords to the blocklist yet.");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8790 | Test Summary: Delete keyword using the check box"
	@priority = "3"
	test DeleteKeywordUsingTheCheckBox {
		var words = "ac keyword 1,ac keyword 2";

		task ("Launch AC") {
			ACUtils.launchAC();
		}

		task ("Go to settings, definitions and definitions type") {
			ACNavigation.goToSettings();

			ACSettings.goToDefinitions();

			ACDefinitions.goToDefinitionType(definitionType = "Interests");
		}

		task ("Add two new keywords") {
			for (var word : list "${words}") {
				ACSettings.addKeywords(keyword = "${word}");
				ACSettings.assertKeywords(keyword = "${word}");
			}
		}

		task ("Delete the keyword, assert deletion") {
			ACSettings.deleteKeywordCheckbox(keyword = "ac keyword 1");

			ACSettings.assertKeywordNotPresent(keyword = "ac keyword 1");

			ACSettings.assertKeywords(keyword = "ac keyword 2");

			ACSettings.deleteKeywordCheckbox(keyword = "ac keyword 2");

			ACSettings.assertKeywordNotPresent(keyword = "ac keyword 2");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8792 | Test Summary: Delete multiple keywords"
	@ignore = "true"
	@priority = "3"
	test DeleteMultipleKeywords {

		// TODO LRAC-8792 DeleteMultipleKeywords pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8792 | Test Summary: Paginate keyword block list"
	@priority = "3"
	test PaginateKeywordBlockList {
		var words = "ac keyword 1,ac keyword 2,ac keyword 3,ac keyword 4,ac keyword 5,ac keyword 6";

		task ("Go to settings, definitions and definitions type") {
			ACNavigation.goToSettings();

			ACSettings.goToDefinitions();

			ACDefinitions.goToDefinitionType(definitionType = "Interests");
		}

		task ("Add new keywords") {
				ACSettings.addMultiplesKeywords(keywordList = "${words}");
		}

		ACSettings.assertKeywords(keyword = "${words}");

		task ("Assert default pagination display "20 Items" message and page number") {
			AssertTextEquals.assertText(
				locator1 = "ACUtils#PAGINATION_ITEMS_PER_PAGE_SELECT",
				value1 = "20 Items");

			ACUtils.viewResultsMessage(results = "Showing 1 to 6 of 6 entries.");

			ACUtils.viewResultsPages(pageNumber = "1");
		}

		task ("Change the pagination to 5") {
			ACUtils.changePagination(itemsPerPage = "5");

		}

		task ("Assert the keywords in the page") {
			var words = "ac keyword 1,ac keyword 2,ac keyword 3,ac keyword 4,ac keyword 5";

			ACSettings.assertKeywords(keyword = "${words}");
		
			var key_KeywordName = "ac keyword 6";

			AssertElementNotPresent(
				locator1 = "ACSettings#KEYWORD_NAME",
				value1 = "ac keyword 6");
		}

		task("Assert the amount of entries in the page") {
			ACUtils.viewResultsMessage(results = "Showing 1 to 5 of 6 entries.");

			ACUtils.viewResultsPages(pageNumber = "1");

			ACUtils.viewResultsPages(pageNumber = "2");
		}

		task ("Page number display 1 2, check previous next button and assert the keyword displayed in the page") {
			ACUtils.checkPreviousNextButton(nextButton = "true");

			ACSettings.assertKeywords(keyword = "ac keyword 6");

			ACUtils.viewResultsMessage(results = "Showing 6 to 6 of 6 entries.");

			ACUtils.checkPreviousNextButton(previousButton = "true");

			ACUtils.viewResultsMessage(results = "Showing 1 to 5 of 6 entries.");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8795 | Test Summary: Search for a blocked keyword"
	@ignore = "true"
	@priority = "3"
	test SearchForBlockedKeyword {

		// TODO LRAC-8795 SearchForBlockedKeyword pending implementation

	}

}